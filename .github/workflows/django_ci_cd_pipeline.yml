name: Django CI/CD pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        env:
          CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
        run: |
          pytest

  # build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Build and Push Docker Image
  #       run: |
  #         docker build -t dimitrihoareau/portfolioapp:latest .
  #         docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
  #         docker push dimitrihoareau/portfolioapp:latest

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
    run: |
      docker build . --file Dockerfile --tag dimitrihoareau/portfolioapp:latest
      docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      docker push dimitrihoareau/portfolioapp:latest


  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: success()
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Deploy to EC2
  #     run: |
  #       # Your deployment script here
  #       # For example, use SSH to connect to EC2 and pull the latest Docker image
  #       ssh user@ec2-instance "docker pull your-docker-image:latest"
