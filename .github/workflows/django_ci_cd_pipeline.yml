name: Django CI/CD pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        env:
          CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
        run: |
          pytest

  build:
    needs: test
    if: success() 
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag dimitrihoareau/portfolioapp:latest
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
        docker push dimitrihoareau/portfolioapp:latest

          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
    - uses: actions/checkout@v3
  
    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        echo "$EC2_SSH_KEY" > ec2_ssh_key.pem
        chmod 600 ec2_ssh_key.pem
        ssh -o StrictHostKeyChecking=no -i ec2_ssh_key.pem $EC2_USER@$EC2_HOST "cd /home/ec2-user/dimitri-portfolio/ && docker-compose pull web && docker-compose up -d --build web"











